log:
  level: INFO

entryPoints:
  web:
    # http
    address: ":80"
    http:
      # https://docs.traefik.io/routing/entrypoints/#entrypoint
      redirections:
        entryPoint:
          to: web-secure

  web-secure:
    # https
    address: ":443"

certificatesResolvers:
  letsencrypt:
    # https://docs.traefik.io/master/https/acme/#lets-encrypt
    acme:
      email: "{{ traefik_airflow_mail }}" 
      storage: /etc/traefik/acme/acme.json
      # https://docs.traefik.io/master/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

http:
  routers:
    web-secure-router:
      rule: "Host(`{{ traefik_airflow_host }}`)" 
      entryPoints:
        - web-secure
      middlewares:
        - csrf
      service: airflow-webserver
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt
    
    node-exporter-secure-router:
      rule: "Host(`{{ traefik_node_exporter_0_host }}`)" 
      entryPoints:
        - web-secure
      middlewares:
        - csrf
        - basic-auth
      service: exporter
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt

  middlewares:
    csrf:
      # https://docs.traefik.io/master/middlewares/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ["X-CSRFToken"]
    
    basic-auth:
      basicauth:
        users:
          - "{{ traefik_basic_auth_user }}:{{ traefik_basic_auth_encrypt_password }}"

  services:
    airflow-webserver:
      loadBalancer:
        servers:
          - url: http://airflow-webserver:8080
    
    exporter:
      loadBalancer:
        servers:
          - url: http://node-exporter:9100

providers:
  docker:
    exposedByDefault: false
    endpoint: 'unix:///var/run/docker.sock'
    watch: true
  # https://docs.traefik.io/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true